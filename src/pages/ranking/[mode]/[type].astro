---
import BaseLayout from "@/layouts/BaseLayout.astro";
import LeaderBoards from "@/components/LeaderBoards.astro";
import type { Modes, TypesLeaderBoard } from "@/utils";

export function getStaticPaths() {
  const modes: Modes[] = ["rpg", "survi"];
  const types: TypesLeaderBoard[] = [
    "kill",
    "kd",
    "maxstreak",
    "elo",
    "level",
    "koth",
  ];

  return modes.flatMap((mode) => {
    return types.map((type) => {
      return {
        params: { mode, type },
        props: {
          pageTitle: `Estadisticas ${mode === "rpg" ? "RPG" : "Survival 1.21"}`,
          fullTitle: `Estadisticas - ${mode === "rpg" ? "RPG" : "Survival 1.21"}`,
        },
      };
    });
  });
}

const { fullTitle, pageTitle } = Astro.props;
const { mode, type } = Astro.params;

export const prerender = true;
---

<BaseLayout title={fullTitle}>
  <div class="container">
    <div class="title">
      <h1>{pageTitle}</h1>
    </div>
    <div class="selector">
      <nav class="tabs-container">
        <div class="tabs-list">
          <a
            href={`/ranking/${mode}/kill`}
            class={type === "kill" ? "active" : ""}><span> Kills</span></a
          >
          <a class={type === "kd" ? "active" : ""} href={`/ranking/${mode}/kd`}
            ><span> K/D</span></a
          >
          <a
            class={type === "maxstreak" ? "active" : ""}
            href={`/ranking/${mode}/maxstreak`}><span>Mayor Racha</span></a
          >
          <a
            class={type === "elo" ? "active" : ""}
            href={`/ranking/${mode}/elo`}><span>ELO</span></a
          >
          <a
            class={type === "level" ? "active" : ""}
            href={`/ranking/${mode}/level`}><span>Nivel</span></a
          >
          <a
            class={type === "koth" ? "active" :  ""}
            href={`/ranking/${mode}/koth`}><span>KOTHs</span></a
          >
        </div>
      </nav>
    </div>
    <LeaderBoards server:defer type={type} mode={mode}>
      <!-- <span slot="fallback">Cargando...</span> -->
    </LeaderBoards>
  </div>
</BaseLayout>

<style>
  .container {
    max-width: 1440px;
    display: flex;
    flex-direction: column;
    margin: 0 auto;
    padding: 1rem;
  }

  .title {
    text-align: center;
    & h1 {
      font-family: "Clash";
      font-weight: 600;
      font-size: var(--fs-xxl);
    }
  }

  .selector {
    margin-top: 3rem;
    width: 100%;
    overflow-x: auto;
    /* margin-bottom: 0.5rem; */
    border-bottom: 2px solid var(--color-divider);
    scrollbar-width: none;
    -ms-overflow-style: none;  
  }

  .selector::-webkit-scrollbar {
    display: none;
    width: 0;
    height: 0;
  }

  .tabs-container {
    min-width: 100%;
  }


  .tabs-list {
    display: flex;
    gap: 0.5rem;
    white-space: nowrap;
    min-width: max-content;

    & a {
      padding: 1rem 1rem 0.5rem;
      border-top: 2px solid var(--color-divider);
      border-left: 2px solid var(--color-divider);
      border-right: 2px solid var(--color-divider);
      border-bottom: none;
      border-top-left-radius: 8px;
      border-top-right-radius: 8px;
      flex-grow: 1;
      position: relative;
      cursor: pointer;

      &:hover {
        background-color: rgb(17 17 17);
      }
    }
    & a.active::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: var(--resalt);
      border-radius: 3px;
    }

    & span {
      font-family: "Clash";
      font-weight: 500;
      font-size: var(--fs-md);
      text-decoration: none;
      white-space: nowrap;
    }
  }
</style>

---
import BaseLayout from "@/layouts/BaseLayout.astro";
import LeaderBoards from "@/components/LeaderBoards.astro";
import type { Modes, TypesLeaderBoard } from "@/utils";

export function getStaticPaths() {
  const modes: Modes[] = ["rpg", "survi"];
  const types: TypesLeaderBoard[] = ["kill", "kd", "maxstreak", "elo", "level", "koth"];

  return modes.flatMap((mode) => {
    return types.map((type) => {
      return {
        params: { mode, type },
        props: {
          pageTitle: `Estadisticas ${mode === "rpg" ? "RPG" : "Survival 1.21"}`,
          fullTitle: `Estadisticas - ${mode === "rpg" ? "RPG" : "Survival 1.21"}`,
        },
      };
    });
  });
}

const { fullTitle, pageTitle } = Astro.props;
const { mode, type } = Astro.params;


export const prerender = true;
---

<BaseLayout title={fullTitle}>
  <div class="container">
    <div class="title">
      <h1>{pageTitle}</h1>
    </div>
    <div class="selector">
      <nav class="tabs-container">
        <ul class="tabs-list">
          <li class={type === 'kill' ? 'active' : ''}>
            <a href={`/ranking/${mode}/kill`}>Kills</a>
          </li>
          <li class={type === 'kd' ? 'active' : ''}>
            <a href={`/ranking/${mode}/kd`}>K/D</a>
          </li>
          <li class={type === 'maxstreak' ? 'active' : ''}>
            <a href={`/ranking/${mode}/maxstreak`}>Max Streak</a>
          </li>
          <li class={type === 'elo' ? 'active' : ''}>
            <a href={`/ranking/${mode}/elo`}>ELO</a>
          </li>
          <li class={type === 'level' ? 'active' : ''}>
            <a href={`/ranking/${mode}/level`}>Nivel</a>
          </li>
          <li class={type === 'koth' ? 'active' : ''}>
            <a href={`/ranking/${mode}/koth`}>KOTH</a>
          </li>
        </ul>
      </nav>
    </div>
    <LeaderBoards
      server:defer
      type={type}
      mode={mode}
    >
      <!-- <span slot="fallback">Cargando...</span> -->
    </LeaderBoards>
  </div>
</BaseLayout>

<style>
  .container{
    max-width: 1440px;
    display: flex;
    justify-self: center;
    flex-direction: column;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .title {
    text-align: center;
    & h1 {
      font-family: "Clash";
      font-weight: 600;
      font-size: var(--fs-xxl);
    }
  }
  
  .selector {
    margin-top: 3rem;
  }

  .tabs-list {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    & a{
      font-family: "Clash";
      font-weight: 500;
      font-size: var(--fs-md);
    }
  }
/*   
  .tabs-container {
    width: 100%;
    overflow-x: auto;
  }
  
  .tabs-list {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    border-bottom: 1px solid #ddd;
  }
  
  .tabs-list li {
    padding: 0.75rem 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .tabs-list li a {
    text-decoration: none;
    color: #777;
    font-weight: 500;
  }
  
  .tabs-list li:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }
  
  .tabs-list li.active {
    border-bottom: 3px solid #ff6b6b;
  }
  
  .tabs-list li.active a {
    color: #ff6b6b;
    font-weight: 700;
  }
  
  @media (max-width: 768px) {
    .tabs-list {
      width: max-content;
    }
  } */
</style>
